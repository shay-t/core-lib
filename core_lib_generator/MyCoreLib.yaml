MyCoreLib:
  env:
    USER_USER: user
    USER_PASSWORD: pass
    USER_PORT: 5432
    USER_DB: User
    USER_HOST: localhost
    SOLR_HOST: localhost
    SOLR_PORT: 8983
    MEMCACHED_HOST: localhost
    MEMCACHED_PORT: 11211
  config:
    data:
      user_db:
        log_queries: false
        create_db: true
        session:
          pool_recycle: 3200
          pool_pre_ping: false
        url:
          protocol: postgresql
          username: ${oc.env:USER_USER}
          password: ${oc.env:USER_PASSWORD}
          host: ${oc.env:USER_HOST}
          port: ${oc.env:USER_PORT}
          file: ${oc.env:USER_DB}
      customer_db:
        log_queries: false
        create_db: true
        session:
          pool_recycle: 3200
          pool_pre_ping: false
        url:
          protocol: sqlite
      solr:
        url: 
          protocol: https
          host: ${oc.env:SOLR_HOST}
          port: ${oc.env:SOLR_PORT}
          file: solr/mycore
    cache:
      type: memcached
      host: ${oc.env:MEMCACHED_HOST}
      port: ${oc.env:MEMCACHED_PORT}
    jobs:
      my_job: 
        initial_delay: 1s  # 'boot', 'startup', 1m, 1s make sure input is valid
        frequency: 1m # this is non mandatory 
        handler: 
          _target_: my.package.Updateuser

  data_layers:
    data:
      User:
        name: User
        columns:
          name:
            name: name
            type: VARCHAR
            default: ' '
          pass:
            name: pass
            type: VARCHAR
            default: ' '
        is_soft_delete: false
        is_soft_delete_token: false
        migrate: true
    data_access: 
      user_data_access:
        entity: User
        is_crud_soft_delete: true # show only when true
        is_crud_soft_delete_token: true # show only when true
